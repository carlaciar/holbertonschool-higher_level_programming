# Test present: integer_validator()
# Test present: integer_validator("age")

# Import the class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Create an instance
>>> bg = BaseGeometry()

# area() should raise Exception
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Valid integer validations (no output expected)
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Invalid type: string instead of int
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

# Invalid value: zero (age)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

# Invalid value: negative
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0
