#!/usr/bin/python3
# Test present: integer_validator()
# Test present: integer_validator("age")
# Test present: integer_validator("age", (4,))
# Test present: integer_validator("age", [3])
# Test present: integer_validator("age", True)

BaseGeometry = __import__('7-base_geometry').BaseGeometry
bg = BaseGeometry()

# Valid (no prints expected)
bg.integer_validator("my_int", 12)
bg.integer_validator("width", 89)

# area() should raise
try:
    bg.area()
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

# Missing args
try:
    bg.integer_validator()
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

try:
    bg.integer_validator("age")
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

# Wrong types
try:
    bg.integer_validator("name", "John")
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

try:
    bg.integer_validator("age", (4,))
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

try:
    bg.integer_validator("age", [3])
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

# Bool accepted -> no print
bg.integer_validator("age", True)

# Invalid values
try:
    bg.integer_validator("age", 0)
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))

try:
    bg.integer_validator("distance", -4)
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))
